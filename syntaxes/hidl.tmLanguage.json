{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "HIDL",
	"scopeName": "source.hidl",
	"foldingStartMarker": "\\{\\s*$",
	"foldingStopMarker": "^\\s*\\}",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#assign"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#keywords"
		},
		{
			"include": "#specialKeywords"
		},
		{
			"include": "#types"
		},
		{
			"include": "#specialTypes"
		},
		{
			"include": "#const_expr"
		}
	],
	"repository": {
		"comments": {
			"patterns": [
				{
					"name": "comment.block.hidl",
					"begin": "(/\\*)",
					"end": "(\\*/)"
				},
				{
					"name": "comment.line.double-slash.hidl",
					"match": "(//).*"
				}
			]
		},
		"functions": {
			"match": "(.*)\\s*(\\()(.*)(\\))",
			"captures": {
				"1": {
					"name": "entity.name.function.hidl",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#types"
						},
						{
							"include": "#specialTypes"
						},
						{
							"include": "#specialKeywords"
						}
					]
				},
				"2": {
					"name": "punctuation.definition.parameters.begin.hidl"
				},
				"3": {
					"name": "variable.parameter.hidl",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#types"
						},
						{
							"include": "#specialTypes"
						}
					]
				},
				"4": {
					"name": "punctuation.definition.parameters.end.hidl"
				}
			}
		},
		"strings": {
			"name": "string.quoted.double.hidl",
			"begin": "\"",
			"end": "\"",
			"patterns": [
				{
					"name": "constant.character.escape.hidl",
					"match": "\\\\."
				}
			]
		},
		"keywords": {
			"name": "keyword.other.hidl",
			"match": "\\b(package|import|interface|type|enum|struct|typedef)\\b(.*)",
			"captures": {
				"2":{
					"name": "entity.name.class.hidl",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#types"
						},
						{
							"include": "#specialTypes"
						},
						{
							"include": "#specialKeywords"
						},
						{
							"include": "#version"
						}
					]
				}
			}
		},
		"specialKeywords": {
			"name": "keyword.control.hidl",
			"match": "\\b(generates|extends|::)\\b"
		},
		"types": {
			"name": "storage.type.hidl",
			"match": "\\b(void|bool|string|unsigned|char|int|long|float|double|int8_t|int16_t|int32_t|int64_t|uint8_t|uint16_t|uint32_t|uint64_t)\\b"
		},
		"specialTypes": {
			"name": "meta.preprocessor.string.hidl",
			"match": "\\b(vec|map)\\b"
		},
		"version": {
			"name": "constant.numeric.hidl",
			"match": "@([0-9]+\\.[0-9]+)"
		},
		"assign": {
			"comment": "keyword.operator.assignment.hidl",
			"name":  "keyword.operator.assignment.hidl",
			"match": "(.*)=",
			"captures": {
				"1": {
					"name": "variable.name.hidl",
					"patterns": [
						{
							"include": "#comments"
						},
						{
							"include": "#types"
						},
						{
							"include": "#specialTypes"
						}
					]
				}
			}
		},
		"const_expr": {
			"patterns": [
				{
					"include": "#numeric"
				},
				{
					"name": "constant.language.hidl",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "keyword.operator.logical.hidl",
					"match": "([!<>]|&&|\\|\\||<=|>=|==|!=)"
				},
				{
					"name": "keyword.operator.bitwise.hidl",
					"match": "([&|~\\^]|<<|>>)"
				},
				{
					"name": "keyword.operator.arithmetic.hidl",
					"match": "([+*/%\\-])"
				}
			]
		},
		"numeric": {
			"patterns": [
				{
					"name": "constant.numeric.hex.hidl",
					"match": "(0[x\\x{007c}X][0-9a-fA-F]+[lL]?)"
				},
				{
					"name": "constant.numeric.float.hidl",
					"match": "([0-9]*\\.[0-9]+([eE][-\\x{002b}]?[0-9]+)?f?|[0-9]*\\.?[0-9]+([eE][-\\x{002b}]?[0-9]+)?f)"
				},
				{
					"name": "constant.numeric.decimal.hidl",
					"match": "([0-9]+[lL]?)"
				}
			]
		}
	}
}